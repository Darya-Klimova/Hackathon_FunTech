openapi: 3.0.1
info:
  title: Сервис для посетителей событий Яндекса EventHub
  version: "1.0"
  description: API позволяет управлять событиями, пользователями, заявками.
servers:
  - url: https://api.eventhub.com/v1
    description: Сервер разработки
tags:
  - name: events
    description: Операции с событиями
  - name: users
    description: Операции с пользователями
  - name: applications
    description: Операции с заявками
  - name: notification
    description: Операции с уведомлениями

paths:
  /users:
    get:
      tags:
        - users
      summary: Получить список пользователей
      description: Данная операция позволяет получить список всех пользователей приложения
      responses:
        200:
          description: Список пользователей получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Все нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - users
      summary: Создать пользоателя
      description: Данная операция позволяет создать нового пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        200:
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

  /users/{userId}:
    get:
      tags:
        - users
      summary: Получить данные пользователя
      description: Данная операция позволяет получить данные конкретного пользователя
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: string

      responses:
        200:
          description: Данные пользователя получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Все нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - users
      summary: Обновить данные пользователя
      description: Данная операция позволяет обновить данные о конкретном пользователе
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'            
      responses:
        200:
          description: Данные пользователя обновлены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Все нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
                
  /users/{userId}/applications:
    get:
      tags:
        - users
        - applications
      summary: Получить список заявок пользователя
      description: Данная операция позволяет получить список заявок конкретного пользователя
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: string

      responses:
        200:
          description: Список заявок пользователя получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
        default:
          description: Все нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error' 
                
  /users/{userId}/events:
    get:
      tags:
        - users
        - events
      summary: Получить список избранных событий пользователя
      description: Данная операция позволяет получить список избранных событий конкретного пользователя
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: string

      responses:
        200:
          description: Список избранных событий пользователя получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
        default:
          description: Все нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
  /users/{userId}/{eventId}/notification:
    post:
      tags:
        - users
        - events
        - notification
      summary: Создать уведомление для конкретного пользователя и события
      description: Данная операция позволяет создать уведомление для конкретного пользователя и события
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          description: ID события
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notification'
      responses:
        200:
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notification'
components:
  schemas:
    user:
      type: object
      properties:
        userId:
          type: string
        e-mail:
          type: string
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        second_name:
          type: string
        gender:
          type: string
          enum:
           - жен
           - муж
        birth_date:
          type: string
        locality:
          type: string
        phone:
          type: string
        job:
          type: string
        position:
          type: string
        date:
          type: string
          format: 2023-01-20T00:00:00
        experience:
          type: string
        theme:
          type: string
        photo:
          type: string
          
    application:
      type: object
      properties:
        applicationId:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        userId:
          type: string
        gender:
          type: string
          enum:
           - жен
           - муж
        phone:
          type: string
        job:
          type: string
        position:
          type: string
        created_at:
          type: string
          format: 2023-01-20T00:00:00
        experience:
          type: string
        theme:
          type: string
        status:
          type: string
          enum:
           - отправлена
           - подтверждена
           - отменена
    
    event:
      type: object
      properties:
        eventId:
          type: string
        adminId:
          type: string
        title:
          type: string
        limit:
          type: string
        date:
          type: string
          format: 2023-01-20T00:00:00
        address:
          type: string
        theme:
          type: string
        description:
          type: string
        program:
          type: string
        format:
          type: string
        status:
          type: string
          enum:
           - регистрация
           - завершено
           - отменено
        host:
          type: string
        users:
          type: string
        applications:
          type: string
        presentation:
          type: string
        recording:
          type: string
        photo:
          type: string
  
    notification:
      type: object
      properties:
        notificationId:
          type: string
        type:
          type: string
        theme:
          type: string
        content:
          type: string
        date:
          type: string
          format: 2023-01-20T00:00:00
        retention_period:
          type: string
          
    error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
